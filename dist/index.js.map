{"version":3,"sources":["../src/index.js"],"names":["Square","props","onClick","value","Board","i","squares","renderSquare","React","Component","Game","state","history","squars","Array","fill","xIsNext","stepNumber","winner","step","current","calculateGameWinner","setState","index","slice","length","pervState","concat","status","moves","map","move","desc","jumpTo","handleClick","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom\"\r\nimport \"./index.css\";\r\n\r\nfunction Square(props) {\r\n    return (\r\n        <button className=\"square\"\r\n                onClick={props.onClick}>\r\n            {props.value}\r\n        </button>\r\n    );\r\n}\r\n\r\nclass Board extends React.Component {\r\n\r\n\r\n    renderSquare(i) {\r\n        return <Square value={this.props.squares[i]} onClick={()=>this.props.onClick(i)} />;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(0)}\r\n                    {this.renderSquare(1)}\r\n                    {this.renderSquare(2)}\r\n                </div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(3)}\r\n                    {this.renderSquare(4)}\r\n                    {this.renderSquare(5)}\r\n                </div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(6)}\r\n                    {this.renderSquare(7)}\r\n                    {this.renderSquare(8)}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Game extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            history:[{\r\n                squars: Array(9).fill(null)\r\n            }],\r\n            xIsNext:true,\r\n            stepNumber:0,\r\n            winner:null\r\n        }\r\n    }\r\n    jumpTo(step){\r\n        const current= this.state.history[step].squars;\r\n        const winner= calculateGameWinner(current);\r\n        this.setState({\r\n            stepNumber:step,\r\n            xIsNext:(step%2)===0,\r\n            winner:winner\r\n        })\r\n    }\r\n    handleClick(index){\r\n        const history= this.state.history.slice(0,this.state.stepNumber+1);\r\n        const current= history[history.length-1].squars;\r\n\r\n        const squars = current.slice();\r\n        if (squars[index] || this.state.winner){\r\n            return;\r\n        }\r\n\r\n        squars[index]=this.state.xIsNext?\"X\":\"O\";\r\n        const winner = calculateGameWinner(squars);\r\n        this.setState(pervState=>({\r\n            history:history.concat([{\r\n                squars:squars\r\n            }]),\r\n            winner:winner,\r\n            stepNumber:history.length,\r\n            xIsNext:!pervState.xIsNext\r\n        }));\r\n    }\r\n    render() {\r\n        const history= this.state.history;\r\n        const current= history[this.state.stepNumber].squars;\r\n        const winner= calculateGameWinner(current);\r\n        let status = 'Next player: '+(this.state.xIsNext?\"X\":\"O\");\r\n        if (winner){\r\n            status= \"Winner is : \"+this.state.winner;\r\n        }\r\n        const moves= history.map((step,move)=>{\r\n            const desc= move? \"Jump To Move #\"+move:\"Jump To Start Game\";\r\n            return (<li key={move}>\r\n                <button onClick={()=>this.jumpTo(move)}>{desc}</button>\r\n            </li>)\r\n        });\r\n\r\n        return (\r\n            <div className=\"game\">\r\n                <div className=\"game-board\">\r\n                    <Board squares={current}\r\n                           onClick={(i)=>this.handleClick(i)} />\r\n                </div>\r\n                <div className=\"game-info\">\r\n                    <div>{status}</div>\r\n                    <ol>{moves}</ol>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction calculateGameWinner(squares) {\r\n    const lines = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6]\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        const [a, b, c] = lines[i];\r\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n            return squares[a];\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n    <Game />,\r\n    document.getElementById('root')\r\n);\r\n"],"file":"index.js"}